# Set the user and group under which the Nginx worker processes will run
user www-data;
# Specify the number of worker processes that Nginx should spawn
worker_processes auto;
# Specify the file path where the process ID (PID) of the main Nginx
# process will be stored
pid /run/nginx.pid;
# Include additional configuration files from a specified directory
include /etc/nginx/modules-enabled/*.conf;
# Configure the event handling model
events {
    # Specify the maximum number of simultaneous connections that each
    # worker process can handle.
    #
    # The total number of connections that Nginx can handle will be the
    # number of worker processes multiplied by this number:
    worker_connections 768;
}

http {
    # Serve CSS files with the correct MIME type
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name localhost;
        root /var/www/slate;
        # Set the default files that Nginx looks for when a directory is
        # accessed.
        #
        # When a user visits /, Nginx will check for index.php first.
        # If index.php is not found, it will look for index.html.
        index index.php index.html;

        # Custom error pages
        error_page 400 error_pages/error.php;
        error_page 401 error_pages/error.php;
        error_page 403 error_pages/error.php;
        error_page 404 error_pages/error.php;
        error_page 405 error_pages/error.php;
        error_page 408 error_pages/error.php;
        error_page 500 error_pages/error.php;
        error_page 502 error_pages/error.php;
        error_page 504 error_pages/error.php;

        # Control all requests at the root /
        location / {
            # Checks if the requested file exists
            #
            # $uri/: If $uri is a directory, Nginx looks for an index file inside.
            # =404: If neither exists, return a 404 Not Found.
            try_files $uri $uri/ =404;
        }

        # Tell Nginx how to handle PHP files
        #
        # Match files that end in .php
        location ~ \.php$ {
            include fastcgi_params;
            # Configure Nginx with FastCGI
            fastcgi_pass unix:/run/php/php8.2-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # Handling static files (CSS, JS)
        location ~* \.(css|js)$ {
            # Set caching headers
            expires 30d;  # Cache for 30 days
            add_header Cache-Control "public";
        }
    }
}
